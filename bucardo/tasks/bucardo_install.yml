---

- name: Install Epel Release & Python psycopg2
  yum:
    pkg: "{{ item }}"
    state: latest
  loop:
    - epel-release
    - python3-psycopg2
    - python3-pexpect

#Install Postgre libraries
- name: postgres perl library
  yum:
    pkg: "{{ item }}"
    state: latest
  loop:
    - postgresql-plperl

#Install perl libraries
- name: Install perl libraries
  yum:
    pkg: "{{ item }}"
    state: latest
  loop:
    - perl
    - perl-DBIx-Safe
    - perl-Test-Simple
    - perl-boolean
    - perl-ExtUtils-MakeMaker
    - perl-CGI
    - perl-DBD-Pg
    - perl-Encode-Locale
    - perl-Pod-Parser
    - perl-Sys-Syslog

- name: add locale
  shell: "{{ item }}"
  loop:
    - export LC_CTYPE=en_US.UTF-8
    - export LC_ALL=en_US.UTF-8

#Making dir for Bucardo
- name: making dir for bucardo run
  file:
    path: /var/run/bucardo
    state: directory

- name: making dir for bucardo log
  file:
    path: /var/log/bucardo
    state: directory

- name: making dir for bucardo instal
  file:
    path: /tmp/bucardo
    state: directory


# Creating user in DB for Bucardo
- name: Create bucardo database
  postgresql_db:
    state: present
    name: "{{ db_name }}"
  become: yes
  become_user: postgres

- name: Create db user
  postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  become: yes
  become_user: postgres

- name: Grant bucardo user super user role
  postgresql_user:
    user: "{{ db_user }}"
    role_attr_flags: SUPERUSER
  become: yes
  become_user: postgres

- name: Allow trust connection for the bucardo user
  postgresql_pg_hba:
    dest: "/var/lib/pgsql/data/pg_hba.conf"
    contype: local
    databases: all
    method: trust
    users: "{{ db_user }}"
    create: true
  become: yes
  become_user: postgres
  notify: restart postgres

- name: Allow md5 connection for the bucardo user
  postgresql_pg_hba:
    dest: "/var/lib/pgsql/data/pg_hba.conf"
    contype: host
    address: "{{ hostvars[item]['ansible_host'] }}"
    databases: all
    method: md5
    users: "{{ db_user }}"
    create: true
  with_items: "{{ ansible_play_hosts }}"
  become: yes
  become_user: postgres
  notify: restart postgres

#notife in prev statement doesn't work, test if you have time
- name: restart postgres
  service:
    name: postgresql
    state: restarted

#Check if bucardo already downloaded
- name: Check if bucardo already downloaded
  stat:
    path: /tmp/bucardo/bucardo.tar.gz
  register: bucardo_exist

- name: Download Bucardo package
  get_url:
    url: "{{ bucardo_download_link }}"
    dest: /tmp/bucardo
  when: not bucardo_exist.stat.exists

- name: rename archive
  shell: "mv /tmp/bucardo/* /tmp/bucardo/bucardo.tar.gz"
  when: not bucardo_exist.stat.exists

- name: Unarchive Bucardo package
  shell: "tar xvf /tmp/bucardo/bucardo.tar.gz -C /tmp/bucardo --strip-components=1"
  when: not bucardo_exist.stat.exists

- name: Install Bucardo 1) Makefile.PL
  shell: "perl Makefile.PL"
  args:
    chdir: /tmp/bucardo/


- name: Install Bucardo 2) make
  shell: "make"
  args:
    chdir: /tmp/bucardo/

- name: Install Bucardo 3) make install
  shell: "make install"
  args:
    chdir: /tmp/bucardo/

- name: Install Bucardo 4) export bucardo path
  shell: "export PATH=$PATH:/usr/local/bin"


#Generate .pgspass file (credentials)
- name: Install Bucardo 5) Copy credential file
  template:
    src: .pgpass
    dest: "{{ home_pgpass_dest }}"
    mode: 0600


- name: Install Bucardo 6) Install bucardo
  expect:
    command: '/usr/local/bin/bucardo install'
    responses:
      'Enter a number to change it, P to proceed, or Q to quit:': 'P'

