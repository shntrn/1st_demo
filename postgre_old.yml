- name: SQL Install
  hosts: all
  become: yes # optional parameter for running playbook with SU rights

  tasks:
    - name: Install postgre
      yum:
        pkg: postgresql
        state: present

    - name: Postgresql server install
      yum:
       pkg: postgresql-server
       state: present

    - name: Postgresql server install
      yum:
       pkg: python-setuptools
       state: present

    - name: Postgresql server install
      yum:
       pkg: epel-release
       state: present

    - name: Postgresql server install
      yum:
       pkg: python-pip
       state: present

#    - name: PIP
#      yum:
#       pkg: python3-pip
#       state: present
#
    - name: Install Python packages
      pip:
        name: py2-ipaddress


- name: Installing postgress & add user
  hosts: sql-node1
  become: yes
  vars_files:
    - vars.yml


  tasks:
    - name: Find out if PostgreSQL is initialized
      stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: Add listen IP address node1
      lineinfile:
       path: /var/lib/pgsql/data/postgresql.conf
       regexp: 'listen_addresses'
       line: listen_addresses='{{ ansible_default_ipv4.address }}'

    - name: Create app database
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: Create db user
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: Grant db user access to app db
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: Allow trust connection for the bucardo user
      postgresql_pg_hba:
        dest: "/var/lib/pgsql/data/pg_hba.conf"
        contype: local
        databases: all
        method: trust
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: Allow md5 connection for the bucardo user
      postgresql_pg_hba:
        dest: "/var/lib/pgsql/data/pg_hba.conf"
        contype: host
        address: "{{ ansible_host }}"
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

  handlers:
  - name: restart postgres
    service: name=postgresql state=restarted

















#- name: Add listen IP address node1
#  hosts: sql-node2
#  tasks:
#    - name:
#      lineinfile:
#        path: /var/lib/pgsql/data/postgresql.conf
#        regexp: 'listen_addresses'
#        line: listen_address='192.168.56.112'